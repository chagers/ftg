{"version":3,"sources":["webpack:///./src/pages/recipe-list.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/container.js","webpack:///./src/components/navigation.js","webpack:///./src/components/layout.js","webpack:///./src/components/recipe-preview.js"],"names":["RecipeList","render","siteTitle","get","this","recipes","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_6__","location","props","style","background","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","title","className","map","_ref","node","key","slug","_components_recipe_preview__WEBPACK_IMPORTED_MODULE_7__","recipe","React","Component","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape","container","children","react_default","maxWidth","margin","position","navigation","role","styles","navigationItem","gatsby_browser_entry","to","Template","_this$props","__PREFIX_PATHS__","__PATH_PREFIX__","gatsby__WEBPACK_IMPORTED_MODULE_1__","_recipe_preview_module_scss__WEBPACK_IMPORTED_MODULE_3__","_recipe_preview_module_scss__WEBPACK_IMPORTED_MODULE_3___default","preview","src","linkToImage","previewTitle","tags","tag"],"mappings":"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","file":"component---src-pages-recipe-list-js-93893ea7df3293b184c5.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\nimport styles from './recipe-list.module.scss'\nimport Layout from \"../components/layout\"\nimport RecipePreview from '../components/recipe-preview'\n\nclass RecipeList extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\n    const recipes = get(this, 'props.data.allContentfulRecipe.edges')\n\n    return (\n      <Layout location={this.props.location} >\n        <div style={{ background: '#fff' }}>\n          <Helmet title={siteTitle} />\n          <div className=\"wrapper\">\n            <h2 className=\"section-headline\">Recipes Are Here</h2>\n            <ul className=\"recipe-list\">\n              {recipes.map(({ node }) => {\n                return (\n                  <li key={node.slug}>\n                    <RecipePreview recipe={node} />\n                  </li>\n                )\n              })}\n            </ul>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default RecipeList\n\nexport const pageQuery = graphql`\n  query RecipeListQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allContentfulRecipe(sort: { fields: [title], order: DESC }) {\n      edges {\n        node {\n          title\n          slug\n          yields\n          time\n          tags\n          linkToImage\n          source\n          ingredientsLong {\n            childMarkdownRemark {\n              html\n            }\n          }\n          preparation {\n            childMarkdownRemark {\n              html\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\n\nexport default ({ children }) => (\n  <div style={{ maxWidth: 1180, margin: '0 auto', position: 'relative' }}>{children}</div>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styles from './navigation.module.scss'\n\nexport default () => (\n  <nav role=\"navigation\">\n    <ul className={styles.navigation}>\n      <li className={styles.navigationItem}>\n        <Link to=\"/\">Home</Link>\n      </li>\n    </ul>\n  </nav>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport base from './base.scss'\nimport Container from './container'\nimport Navigation from './navigation'\n\nclass Template extends React.Component {\n  render() {\n    const { location, children } = this.props\n    let header\n\n    let rootPath = `/`\n    if (typeof __PREFIX_PATHS__ !== `undefined` && __PREFIX_PATHS__) {\n      rootPath = __PATH_PREFIX__ + `/`\n    }\n\n    return (\n      <Container>\n        <Navigation />\n        {children}\n      </Container>\n    )\n  }\n}\n\nexport default Template\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport styles from './recipe-preview.module.scss'\n\nexport default ({ recipe }) => (\n  <div className={styles.preview}>\n    <img src={recipe.linkToImage}></img>\n    <h3 className={styles.previewTitle}>\n      <Link to={`/recipe/${recipe.slug}`}>{recipe.title}</Link>\n    </h3>\n    {recipe.tags.map(tag => (\n      <p className={styles.tag} key={tag}>\n        {tag}\n      </p>\n    ))}\n  </div>\n)\n"],"sourceRoot":""}